// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Enum definitions

enum UserRole {
  USER
  ADMIN
}

enum AdType {
  SALE
  WANTED
  SERVICE
}

// Model definitions

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  name            String
  password        String
  role            UserRole          @default(USER)
  Ad              Ad[]
  Message         Message[]
  RoomParticipant RoomParticipant[]
}

model Ad {
  id          Int      @id @default(autoincrement())
  type        AdType
  title       String
  description String
  price       Int?
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  User        User     @relation(fields: [userId], references: [id])
  Room        Room[]
}

model Room {
  id              Int               @id @default(autoincrement())
  name            String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  adId            Int
  ad              Ad                @relation(fields: [adId], references: [id], onDelete: Cascade)
  Message         Message[]
  RoomParticipant RoomParticipant[]
}

model RoomParticipant {
  userId Int
  User   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  roomId Int
  Room   Room @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@id([userId, roomId])
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  User      User     @relation(fields: [userId], references: [id])
  roomId    Int
  Room      Room     @relation(fields: [roomId], references: [id], onDelete: Cascade)
}
